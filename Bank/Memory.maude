fmod STATIC-ARRAY{Field :: TRIV} is
    pr INT .
    pr LIST{Field} .

    sorts Memory PrimIdentity Identity Value .
    sorts PrimField IdField .
    subsort PrimField IdField < Field$Elt .
    subsort Int Identity < Value .

    pr LIST{Field} .

    op new : Memory PrimIdentity -> Memory .
    op read : Memory Identity Field$Elt -> Value .
    op write : Memory Identity Field$Elt Value -> Memory .
    op delete : Memory Identity -> Memory .
    op idC : PrimIdentity List{Field} -> Identity .

    op clear : Memory -> Memory .
    op _:_ : Identity Field$Elt -> Identity .

    op emptyMemory : -> Memory .

    vars i j size : Int .
    var memory : Memory .
    vars id : PrimIdentity .
    var idComplex id1 id2 : Identity .
    var val : Value .
    var sel sel1 sel2 : Field$Elt .
    var pSel : PrimField .
    var idS : IdField .
    var ls ls1 ls2 : List{Field} .

    eq idC(id, ls) : sel = idC(id, sel ls) .

    eq read(write(memory, id1, sel, val), id1, sel) = val .
    ceq read(write(memory, id1, sel1, val), id2, sel2) = read(memory, id2, sel2)
        if id1 =/= id2 or sel1 =/= sel2 .

    eq read(new(memory, id), idC(id, ls), pSel) = 0 .

    eq read(clear(memory), idC(id, ls) , idS) = idC(id, idS ls) .

    eq read(clear(memory), idC(id, nil) , pSel) = read(memory, idC(id, nil) , pSel) .

    eq read(clear(memory), idC(id, ls sel), pSel) = read(memory, read(memory, idC(id, ls), sel), pSel) .

    eq read(emptyMemory, id1, pSel) = 0 .
    eq read(emptyMemory, id1, idS) = id1 : idS .

    eq read(delete(memory, idC(id, ls)), idC(id, ls ls2), pSel) = 0 .
    eq read(delete(memory, idC(id, ls)), idC(id, ls ls2), idS) = idC(id, ls ls2 idS) .
endfm

fmod TEST-STATIC-ARRAY{Field :: TRIV} is
    pr STATIC-ARRAY{Field} .

    ops memory wMemory cMemory : -> Memory .
    ops bobC bAccC : -> PrimIdentity .
    ops bob bAcc : -> Identity .
    op $balance : -> PrimField .
    op $account : -> IdField .

    eq bob = idC(bobC, nil) .
    eq bAcc = idC(bAccC, nil) .

    eq wMemory = write(write(emptyMemory, bob , $account , bAcc), bAcc, $balance, 1) .
    eq cMemory = clear(wMemory) .
endfm

red read(emptyMemory, bAcc, $balance) .
red read(emptyMemory, bob, $account) .

red read(wMemory, bob, $account) .
red read(cMemory, bob, $account) .
red read(cMemory, bAcc, $balance) .

red read(cMemory, idC(bobC, $account), $balance) .

red read(emptyMemory, bob, $account)  .

red read(delete(memory, bob), bob : $account, $balance) .
red read(delete(memory, bob), bob : $account, $account) .
