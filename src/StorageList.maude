load Fields .

fmod STORAGE{Field :: TRIV, ValueConc :: TRIV} is
    pr LIST{Field} .
    sorts Struct Value .
    subsort Struct ValueConc$Elt < Value .

    vars st1 st2 : Struct .

    op nil : -> Struct [ctor] .
    op __ : Struct Struct -> Struct [ctor assoc id: nil prec 27] .
    op [_:=_] : NeList{Field} Value -> Struct [ctor prec 26] .
    op _|>_ : Struct List{Field} -> Value [prec 28] .

    mb nil : Struct .

    var xs : Struct .
    var flds : List{Field} .
    var fldsN fldsN2 : NeList{Field} .
    var v : Value .

    eq xs |> nil = xs .
    eq xs [ fldsN := v ] |> fldsN  = v .
    eq xs [ fldsN := v ] |> fldsN fldsN2 = v |> fldsN2 .
    eq xs [ fldsN fldsN2 := v ] |> fldsN = (xs |> fldsN) [ fldsN2 := v ] .
    eq xs [ fldsN := v ] |> fldsN2 = xs |> fldsN2 [owise] .
endfm

red  [ fldsN := v ] |> fldsN .
