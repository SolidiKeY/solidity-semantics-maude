load Memory .
load StorageSelect .

fmod MemoryToStorage{Field :: TRIV} is
    pr BANK-ERASE{Field} .
    pr STORAGE{Field} .

    var st : Value .
    var pF : PrimField .
    var fld : Field$Elt .
    var idF : IdField .
    var vSt : Struct .
    var vInt : Int .
    var id id2 : Identity .
    var mem : Memory .
    var fxs : List{Field} .

    op copyMem : Struct Memory Identity -> Value .

    eq find(copyMem(st, mem, id), pF) = read(mem, id, pF) .

    op copyMemAcc : Struct Memory Identity List{Field} -> Value .

    eq find(copyMemAcc(st, mem, id, fxs), pF) = readR(mem, id, fxs pF) .
    eq find(copyMem(st, mem, id), fxs) = copyMemAcc(st, mem, id, fxs) [owise] .
endfm


fmod Examples{Field :: TRIV} is
    pr MemoryToStorage{Field} .

    ops $alice $bob $carol $account : -> IdField .
    ops $balance : -> PrimField .
    ops st1 stAlice stBal : -> Struct .
    ops idA idF : -> PrimIdentity .
    ops mem nMem memAlice : -> Memory .

    eq nMem = write(new(mem, idA), idC(idA, $account), $balance, 10) .
    eq stAlice = copyMem(st1, nMem, idC(idA, nil)) .
endfm

red find(find(stAlice, $account), $balance) .
red find(stAlice, $account $balance) .
