fmod BANK-SORT is
    pr INT .

    sort Account Map Person Struct Bank BankPersonSelector AccountsSelector PersonSelector Accounts Selector Name Status Value Tuple .
    subsort Account Accounts Map Person Bank Name Int Status < Value .
    subsort PersonSelector AccountsSelector BankPersonSelector Int < Selector .

    ops Bank : Map -> Bank .
    ops This : Person Person Person Bank -> Value .

    ops Alice Bob Carol : -> Name .
    ops open closed : -> Status .

    ops $alice $bob $carol : -> PersonSelector [ctor] .
    op $bank : -> BankPersonSelector [ctor] .
    op $accounts : -> AccountsSelector [ctor] .
    ops $name $accountNr : -> PersonSelector [ctor] .

    ops Person : Name Int -> Person .
    ops Account : Int Status -> Account .
endfm

view Selector from TRIV to BANK-SORT is
    sort Elt to Selector .
endv

fmod BANK-WRITE-READ is
    pr BANK-SORT .
    pr LIST{Selector} .

    op write : Value List{Selector} Value -> Value .
    op write : Map List{Selector} Int -> Map .
    op read : Value List{Selector} -> Value .

    op _<-_ : List{Selector} Value -> Tuple [prec 30] .
    op _;_ : Value Tuple -> Value .

    vars struct value : Value .
    var list : List{Selector} .

    eq struct ; list <- value = write(struct, list, value) .

    op defaultMap : -> Map .
    op defaultBank : -> Bank .
    op defaultAccounts : -> Accounts .
    op defaultAccount : -> Account .
    ops defaultPerson : -> Person .
    op defaultName : -> Name .
    op defaultStruct : -> Value .
endfm
