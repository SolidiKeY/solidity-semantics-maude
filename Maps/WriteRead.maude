fmod WRITE-READ-SORTS is
  sorts Map Key Value .

  op defaultValue : -> Value .
  op defaultMap : -> Map .

  op read : Map Key -> Value .
  op write : Map Key Value -> Map .

  vars key keyWrite keyRead : Key .
  var value : Value .
  var map : Map .

  eq read(defaultMap, key) = defaultValue .
endfm

fmod WRITE-READ is
  inc WRITE-READ-SORTS .

  vars key keyWrite keyRead : Key .
  var value : Value .
  var map : Map .

  eq read(write(map, key, value), key) = value .

  ceq read(write(map, keyWrite, value), keyRead) = read(map, keyRead)
    if keyWrite =/= keyRead .
endfm

fmod WRITE-READ-BOOL is
  inc WRITE-READ-SORTS .

  vars key keyWrite keyRead newKey : Key .
  var value : Value .
  var map : Map .

  op isSame : Key Key -> Bool .
  eq isSame(key, key) = true .
  eq isSame(keyWrite, keyRead) = false .

  op notSame : Key Key -> Bool .
  eq isSame(keyWrite, keyRead) = not(isSame(keyWrite, keyRead)) .

  ceq read(write(map, keyWrite, value), keyRead) = value
    if isSame(keyWrite, keyRead) .

  ceq read(write(map, keyWrite, value), keyRead) = read(map, keyRead)
    if notSame(keyWrite, keyRead) .

  ceq removeFirstKey(write(map, keyWrite, value), keyRead) = map
    if isSame(keyWrite, keyRead) .

  op removeFirstKey : Map Key -> Map .

  ceq removeFirstKey(write(map, keyWrite, value), newKey) = write(removeFirstKey(map, newKey), keyWrite, value)
    if notSame(keyWrite, newKey) .

  op keyInMap : Map Key -> Bool .

  eq keyInMap(defaultMap, key) = false .
  ceq keyInMap(write(map, keyWrite, value), keyRead) = true
    if isSame(keyWrite, keyRead) .

  ceq keyInMap(write(map, keyWrite, value), newKey) = keyInMap(map, newKey)
    if notSame(keyWrite, newKey) .

endfm

fmod WRITE-SUBSTITUTE is
  inc WRITE-READ .

  vars key keyWrite newKey : Key .
  var value : Value .
  var map : Map .

  op removeFirstKey : Map Key -> Map .

  eq removeFirstKey(write(map, key, value), key) = map .
  ceq removeFirstKey(write(map, keyWrite, value), newKey) = write(removeFirstKey(map, newKey), keyWrite, value)
    if keyWrite =/= newKey .

  op keyInMap : Map Key -> Bool .

  eq keyInMap(defaultMap, key) = false .
  eq keyInMap(write(map, key, value), key) = true .
  ceq keyInMap(write(map, keyWrite, value), newKey) = keyInMap(map, newKey)
    if keyWrite =/= newKey .

  ceq write(map, key, value) = write(removeFirstKey(map, key), key, value)
    if keyInMap(map, key) .
endfm

fmod WRITE-READ-WITH-EXAMPLES is
  pr WRITE-READ-SORTS .
  ops k1 k2 : -> Key .
  ops v1 v2 : -> Value .

  op emptyMap : -> Map .
endfm
